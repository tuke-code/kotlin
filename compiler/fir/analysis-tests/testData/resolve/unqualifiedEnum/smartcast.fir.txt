FILE: smartcast.kt
    public final class Duration : R|kotlin/Any| {
        public constructor(milliseconds: R|kotlin/Int|): R|Duration| {
            super<R|kotlin/Any|>()
        }

        public final val milliseconds: R|kotlin/Int| = R|<local>/milliseconds|
            public get(): R|kotlin/Int|

        public final companion object Companion : R|kotlin/Any| {
            private constructor(): R|Duration.Companion| {
                super<R|kotlin/Any|>()
            }

            public final val R|kotlin/Int|.seconds: R|Duration|
                public get(): R|Duration| {
                    ^ R|/Duration.Duration|(this@R|/Duration.Companion.seconds|)
                }

        }

    }
    public final data class Inv<T> : R|kotlin/Any| {
        public constructor<T>(value: R|T|): R|Inv<T>| {
            super<R|kotlin/Any|>()
        }

        public final val value: R|T| = R|<local>/value|
            public get(): R|T|

        public final operator fun component1(): R|T|

        public final fun copy(value: R|T| = this@R|/Inv|.R|/Inv.value|): R|Inv<T>|

    }
    public final fun <T> foo(output: R|Inv<T>|): R|kotlin/Int| {
        lval v: R|T| = R|<local>/output|.R|SubstitutionOverride</Inv.value: R|T|>|
        ^foo when () {
            (R|<local>/v| is R|Duration|) && ==(R|<local>/v|, IntegerLiteral(1).<Unresolved name: seconds>#) ->  {
                Int(0)
            }
            else ->  {
                Int(1)
            }
        }

    }
    public final fun bar(v: R|kotlin/Any|): R|kotlin/Int| {
        ^bar when () {
            (R|<local>/v| is R|Duration|) && ==(R|<local>/v|, IntegerLiteral(1).<Unresolved name: seconds>#) ->  {
                Int(0)
            }
            else ->  {
                Int(1)
            }
        }

    }
