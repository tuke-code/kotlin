/*
 * Copyright 2010-2024 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.test.runners;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.test.generators.GenerateCompilerTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
public class TieredFirJvmLightTreeTestGenerated extends AbstractTieredFirJvmLightTreeTest {
  @Nested
  @TestMetadata("compiler/testData/diagnostics/testsWithStdlib")
  @TestDataPath("$PROJECT_ROOT")
  public class TestsWithStdlib {
    @Nested
    @TestMetadata("compiler/testData/diagnostics/testsWithStdlib/tieredFailures")
    @TestDataPath("$PROJECT_ROOT")
    public class TieredFailures {
      @Nested
      @TestMetadata("compiler/testData/diagnostics/testsWithStdlib/tieredFailures/fail")
      @TestDataPath("$PROJECT_ROOT")
      public class Fail {
        @Test
        @TestMetadata("isSourceButFirPasses.kt")
        public void testIsSourceButFirPasses() {
          runTest("compiler/testData/diagnostics/testsWithStdlib/tieredFailures/fail/isSourceButFirPasses.kt");
        }
      }

      @Nested
      @TestMetadata("compiler/testData/diagnostics/testsWithStdlib/tieredFailures/good")
      @TestDataPath("$PROJECT_ROOT")
      public class Good {
        @Test
        @TestMetadata("isSourceButFirFails.kt")
        public void testIsSourceButFirFails() {
          runTest("compiler/testData/diagnostics/testsWithStdlib/tieredFailures/good/isSourceButFirFails.kt");
        }
      }
    }
  }
}
